#!/usr/bin/env python
"""
–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω
"""

import os
import django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'smart_secretary.settings')
django.setup()

from core.models import Patient, Service, Specialist, Appointment, ContactMessage
from django.db.models import Q

print('üßπ –û–ß–ò–°–¢–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–• –ü–ï–†–ï–î –ü–†–û–î–ê–ö–®–ï–ù–û–ú')
print('=' * 60)

# –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞
TEST_KEYWORDS = [
    '—Ç–µ—Å—Ç', 'test', '–≥—Ä–∞–Ω–∏—á–Ω', '—Å—Ç—Ä–µ—Å—Å', '—Ñ–æ—Ä–º–∞', 'debug', 'sample',
    'example', 'demo', '–≤—Ä–µ–º–µ–Ω–Ω', 'temp', 'tmp', 'fake', 'dummy'
]

def is_test_data(name: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–ø–∏—Å—å —Ç–µ—Å—Ç–æ–≤–æ–π"""
    name_lower = name.lower()
    return any(keyword in name_lower for keyword in TEST_KEYWORDS)

# 1. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
print('\nüë• –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤:')
test_patients = []
for patient in Patient.objects.all():
    if is_test_data(patient.name) or is_test_data(patient.phone):
        test_patients.append(patient)

print(f'  –ù–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {len(test_patients)}')
for patient in test_patients:
    print(f'    - {patient.name} ({patient.phone})')
    # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    appointments_count = patient.appointment_set.count()
    if appointments_count > 0:
        print(f'      –£–¥–∞–ª—è–µ–º {appointments_count} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π')
        patient.appointment_set.all().delete()
    patient.delete()

# 2. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Å–ª—É–≥
print('\nüè• –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Å–ª—É–≥:')
test_services = []
for service in Service.objects.all():
    if is_test_data(service.name):
        test_services.append(service)

print(f'  –ù–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Å–ª—É–≥: {len(test_services)}')
for service in test_services:
    print(f'    - {service.name} ({service.price}{service.currency})')
    # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    appointments_count = service.appointment_set.count()
    if appointments_count > 0:
        print(f'      –£–¥–∞–ª—è–µ–º {appointments_count} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π')
        service.appointment_set.all().delete()
    service.delete()

# 3. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
print('\nüë®‚Äç‚öïÔ∏è –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤:')
test_specialists = []
for specialist in Specialist.objects.all():
    if is_test_data(specialist.name) or is_test_data(specialist.specialty):
        test_specialists.append(specialist)

print(f'  –ù–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤: {len(test_specialists)}')
for specialist in test_specialists:
    print(f'    - {specialist.name} ({specialist.specialty})')
    # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    appointments_count = specialist.appointment_set.count()
    if appointments_count > 0:
        print(f'      –£–¥–∞–ª—è–µ–º {appointments_count} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π')
        specialist.appointment_set.all().delete()
    specialist.delete()

# 4. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π (–æ—Å—Ç–∞–≤—à–∏—Ö—Å—è)
print('\nüìÖ –û—á–∏—Å—Ç–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π:')
test_appointments = []
for appointment in Appointment.objects.all():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –∑–∞–º–µ—Ç–∫–∞–º –∏–ª–∏ –∫–∞–Ω–∞–ª—É
    if (appointment.notes and is_test_data(appointment.notes)) or \
       (appointment.channel and is_test_data(appointment.channel)):
        test_appointments.append(appointment)

print(f'  –ù–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π: {len(test_appointments)}')
for appointment in test_appointments:
    print(f'    - {appointment.patient.name} -> {appointment.specialist.name} ({appointment.start_time})')
    appointment.delete()

# 5. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
print('\nüìß –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:')
test_messages = []
for message in ContactMessage.objects.all():
    if is_test_data(message.name) or is_test_data(message.message):
        test_messages.append(message)

print(f'  –ù–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {len(test_messages)}')
for message in test_messages:
    print(f'    - {message.name} ({message.phone})')
    message.delete()

# 6. –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
print('\nüìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–°–õ–ï –û–ß–ò–°–¢–ö–ò:')
print(f'  –ü–∞—Ü–∏–µ–Ω—Ç—ã: {Patient.objects.count()}')
print(f'  –£—Å–ª—É–≥–∏: {Service.objects.count()}')
print(f'  –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã: {Specialist.objects.count()}')
print(f'  –ó–∞–ø–∏—Å–∏: {Appointment.objects.count()}')
print(f'  –°–æ–æ–±—â–µ–Ω–∏—è: {ContactMessage.objects.count()}')

# 7. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
print('\nüîç –û–°–¢–ê–í–®–ò–ï–°–Ø –î–ê–ù–ù–´–ï (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏):')

print('\n  –£—Å–ª—É–≥–∏:')
for service in Service.objects.all()[:10]:
    print(f'    - {service.name} ({service.price}{service.currency})')

print('\n  –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã:')
for specialist in Specialist.objects.all()[:10]:
    print(f'    - {specialist.name} ({specialist.specialty})')

print('\n  –ü–∞—Ü–∏–µ–Ω—Ç—ã (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5):')
for patient in Patient.objects.all().order_by('-created_at')[:5]:
    print(f'    - {patient.name} ({patient.phone})')

print('\n‚úÖ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!')
print('üéØ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!')
