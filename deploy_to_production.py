#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω
"""

import os
import subprocess
import sys
from datetime import datetime

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"\nüîÑ {description}")
    print(f"   –ö–æ–º–∞–Ω–¥–∞: {command}")
    
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ")
            if result.stdout.strip():
                print(f"   –í—ã–≤–æ–¥: {result.stdout.strip()}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {result.stderr.strip()}")
            return False
    except Exception as e:
        print(f"   üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False
    
    return True

def main():
    print("üöÄ –ü–û–î–ì–û–¢–û–í–ö–ê –ö –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ –í –ü–†–û–î–ê–ö–®–ï–ù")
    print("=" * 60)
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Git
    if not run_command("git status --porcelain", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Git"):
        return False
    
    # 2. –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
    print("\nüß™ –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï")
    if not run_command("python comprehensive_test_suite.py --output production_ready_test", "–ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤"):
        print("‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏! –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
        return False
    
    # 3. –°–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è)
    if not run_command("python manage.py makemigrations", "–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"):
        return False
    
    # 4. –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    if not run_command("python manage.py migrate", "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ª–æ–∫–∞–ª—å–Ω–æ"):
        return False
    
    # 5. –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    if not run_command("python manage.py collectstatic --noinput", "–°–±–æ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤"):
        return False
    
    # 6. –ö–æ–º–º–∏—Ç–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    print("\nüì¶ –§–ò–ù–ê–õ–¨–ù–´–ô –ö–û–ú–ú–ò–¢")
    run_command("git add -A", "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    
    commit_message = f"üéØ PRODUCTION READY: –û—á–∏—â–µ–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã"
    if not run_command(f'git commit -m "{commit_message}"', "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–º–º–∏—Ç–∞"):
        print("   ‚ÑπÔ∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
    
    # 7. –ü—É—à–∏–º –Ω–∞ GitHub
    if not run_command("git push origin main", "–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ GitHub"):
        return False
    
    # 8. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Railway
    print("\nüöÇ –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø –ù–ê RAILWAY")
    print("=" * 60)
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://railway.app/")
    print("2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print("   - SECRET_KEY=<–≤–∞—à_—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_–∫–ª—é—á>")
    print("   - DEBUG=False")
    print("   - ALLOWED_HOSTS=.railway.app")
    print("   - DATABASE_URL=<–±—É–¥–µ—Ç_—Å–æ–∑–¥–∞–Ω_–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏>")
    print("   - CSRF_TRUSTED_ORIGINS=https://<–≤–∞—à_–¥–æ–º–µ–Ω>.railway.app")
    print("4. –î–æ–±–∞–≤—å—Ç–µ PostgreSQL —Å–µ—Ä–≤–∏—Å")
    print("5. –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    print("6. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: python manage.py migrate")
    print("7. –°–æ–∑–¥–∞–π—Ç–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: python manage.py createsuperuser")
    
    # 9. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥–æ—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ì–û–¢–û–í–û–ô –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Django –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'smart_secretary.settings')
    import django
    django.setup()
    
    from core.models import Patient, Service, Specialist, Appointment, ContactMessage
    
    print(f"‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç—ã: {Patient.objects.count()}")
    print(f"‚úÖ –£—Å–ª—É–≥–∏: {Service.objects.count()}")
    print(f"‚úÖ –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã: {Specialist.objects.count()}")
    print(f"‚úÖ –ó–∞–ø–∏—Å–∏: {Appointment.objects.count()}")
    print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è: {ContactMessage.objects.count()}")
    
    print("\nüéØ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ü–†–û–î–ê–ö–®–ï–ù–£!")
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã")
    print("‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã")
    print("‚úÖ –ö–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub")
    print("‚úÖ –ì–æ—Ç–æ–≤–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ Railway")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
