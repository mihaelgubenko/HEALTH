#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã Smart Secretary
"""
import os
import sys
import django
from django.conf import settings
from django.test import Client
from django.contrib.auth.models import User
from core.models import Patient, Service, Specialist, Appointment

def main():
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ SMART SECRETARY")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Django
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Django:")
    print(f"   DEBUG: {settings.DEBUG}")
    print(f"   ALLOWED_HOSTS: {settings.ALLOWED_HOSTS}")
    print(f"   DATABASE: {settings.DATABASES['default']['ENGINE']}")
    print(f"   SECRET_KEY: {'‚úì' if settings.SECRET_KEY else '‚úó'}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    try:
        print(f"   –ü–∞—Ü–∏–µ–Ω—Ç—ã: {Patient.objects.count()}")
        print(f"   –£—Å–ª—É–≥–∏: {Service.objects.count()}")
        print(f"   –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã: {Specialist.objects.count()}")
        print(f"   –ó–∞–ø–∏—Å–∏: {Appointment.objects.count()}")
        print("   ‚úì –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞")
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    try:
        users = User.objects.all()
        print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users.count()}")
        for user in users:
            print(f"   - {user.username}: staff={user.is_staff}, superuser={user.is_superuser}")
        print("   ‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ URL-–º–∞—Ä—à—Ä—É—Ç–æ–≤
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ URL-–º–∞—Ä—à—Ä—É—Ç–æ–≤:")
    try:
        from django.urls import reverse
        urls_to_check = [
            'admin:index',
            'admin:admin_dashboard',
            'core:home',
            'core:services',
            'core:appointment_form',
        ]
        for url_name in urls_to_check:
            try:
                url = reverse(url_name)
                print(f"   ‚úì {url_name}: {url}")
            except Exception as e:
                print(f"   ‚úó {url_name}: {e}")
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞ URL-–º–∞—Ä—à—Ä—É—Ç–æ–≤: {e}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
    print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞:")
    try:
        settings.ALLOWED_HOSTS.append('testserver')
        c = Client()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        response = c.get('/')
        print(f"   –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {response.status_code}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∫–∏
        response = c.get('/admin/')
        print(f"   –ê–¥–º–∏–Ω–∫–∞: {response.status_code}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–∞
        response = c.post('/admin/login/', {'username': 'admin', 'password': 'admin123'})
        print(f"   –í—Ö–æ–¥: {response.status_code}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞
        c.force_login(User.objects.get(username='admin'))
        response = c.get('/admin/dashboard/')
        print(f"   –î–∞—à–±–æ—Ä–¥: {response.status_code}")
        
        print("   ‚úì –¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞: {e}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    print("\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤:")
    try:
        static_dirs = settings.STATICFILES_DIRS
        for static_dir in static_dirs:
            if os.path.exists(static_dir):
                print(f"   ‚úì {static_dir}")
            else:
                print(f"   ‚úó {static_dir} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        static_root = settings.STATIC_ROOT
        if os.path.exists(static_root):
            print(f"   ‚úì {static_root}")
        else:
            print(f"   ‚úó {static_root} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤: {e}")
    
    # 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤
    print("\n7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤:")
    try:
        template_dirs = settings.TEMPLATES[0]['DIRS']
        for template_dir in template_dirs:
            if os.path.exists(template_dir):
                print(f"   ‚úì {template_dir}")
            else:
                print(f"   ‚úó {template_dir} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤: {e}")
    
    # 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π
    print("\n8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π:")
    try:
        from django.core.management import call_command
        from io import StringIO
        out = StringIO()
        call_command('showmigrations', stdout=out)
        migrations = out.getvalue()
        print("   ‚úì –ú–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
    print("   –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    print("   –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç.")
    print("   –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –º–æ–≥—É—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω—ã —Å:")
    print("   - –°–µ—Ç–µ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
    print("   - –ü—Ä–æ–±–ª–µ–º–∞–º–∏ –±—Ä–∞—É–∑–µ—Ä–∞")
    print("   - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º")
    print("   - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π —Ñ–∞–π—Ä–≤–æ–ª–æ–º")
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("   1. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞")
    print("   2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –±—Ä–∞—É–∑–µ—Ä")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏")
    print("   4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ—Ä—Ç 8002 –¥–ª—è –¥–æ—Å—Ç—É–ø–∞")

if __name__ == '__main__':
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'smart_secretary.settings')
    django.setup()
    main()
